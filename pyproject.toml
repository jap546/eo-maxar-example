[project]
name = "eo-maxar-example"
version = "0.0.1"
description = "Examples working with Maxar data using a local earth observation API."
authors = [{ name = "Jordan Pinder", email = "jordan.pinder.dev@gmail.com" }]
readme = "README.md"
keywords = ['python']
requires-python = ">=3.11,<4.0"
classifiers = [
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "datetime>=5.5",
    "geopandas>=1.0.1",
    "geopy>=2.4.1",
    "httpx>=0.28.1",
    "ipykernel>=6.29.5",
    "ipyleaflet>=0.19.2",
    "psycopg>=3.2.7",
    "psycopg-pool>=3.2.6",
    "pydantic>=2.11.4",
    "pydantic-core>=2.33.2",
    "pypgstac>=0.9.6",
    "pystac>=1.13.0",
    "pystac-client>=0.8.6",
    "shapely>=2.1.0",
]

[project.urls]
Repository = "https://github.com/jap546/eo-maxar-example"

[project.scripts]
setup = "main:setup"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["eo_maxar"]

[tool.setuptools]
py-modules = ["eo_maxar"]

[dependency-groups]
dev = [
    "pytest>=7.2.0",
    "pre-commit>=2.20.0",
    "mypy>=0.991",
    "ruff>=0.11.5",
]

[tool.mypy]
files = ["eo_maxar"]
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true
namespace_packages = false

[tool.ruff]
target-version = "py312"
line-length = 88
fix = true

[tool.ruff.lint]
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # DoNotAssignLambda
    "E731",
    "PLR0913",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.ruff.format]
preview = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
known-first-party = ["eo_maxar"]
